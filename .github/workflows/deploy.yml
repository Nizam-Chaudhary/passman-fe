name: Build and Deploy Passman to Docker Swarm

on:
  push:
    branches:
      - main

jobs:
  build-and-publish-docker-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
          push: true
          tags: |
            ghcr.io/nizam-chaudhary/passman:latest
            ghcr.io/nizam-chaudhary/passman:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-and-publish-docker-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}

      - name: Create .env file from secret
        run: |
          export GIT_COMMIT_HASH=${{ github.sha }}

      - name: Create Docker context and set in use
        run: |
          ssh-keyscan -H ec2-13-203-78-142.ap-south-1.compute.amazonaws.com >> ~/.ssh/known_hosts
          docker context create passman --docker "host=ssh://ubuntu@ec2-13-203-78-142.ap-south-1.compute.amazonaws.com"
          docker context use passman
          docker network ls | grep -q "web" || docker network create --driver overlay web

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Docker stack deploy
        run: |
          docker stack config -c docker-stack.yml | docker stack deploy -c - passman -d --with-registry-auth
