/**
 * Generated by orval v7.5.0 üç∫
 * Do not edit manually.
 * Passman API's
 * Passman Backend API's
 * OpenAPI spec version: 1.0.0
 */
/**
 * Schema for user signup data
 */
export type PostApiV1AuthSignUpBody = {
  /**
   * Username for the account
   * @minLength 2
   * @maxLength 255
   */
  userName: string;
  /**
   * Email address for the account
   * @maxLength 255
   */
  email: string;
  /**
   * Password for the account
   * @minLength 8
   */
  password: string;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthSignUp200AllOfStatus =
  (typeof PostApiV1AuthSignUp200AllOfStatus)[keyof typeof PostApiV1AuthSignUp200AllOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthSignUp200AllOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * Generic response schema with status and message
 */
export type PostApiV1AuthSignUp200AllOf = {
  /** Response status indicating success, failure or error */
  status: PostApiV1AuthSignUp200AllOfStatus;
  message: string;
};

/**
 * Schema for master key with iv, encrypted key and salt
 * @nullable
 */
export type PostApiV1AuthSignUp200AllOfThreeDataMasterKey = {
  /** @minLength 1 */
  iv: string;
  /** @minLength 1 */
  encrypted: string;
  /** @minLength 1 */
  salt: string;
} | null;

/**
 * User model with selected fields for responses
 */
export type PostApiV1AuthSignUp200AllOfThreeData = {
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  id: number;
  /** @maxLength 255 */
  userName: string;
  /** @maxLength 255 */
  email: string;
  /**
   * Schema for master key with iv, encrypted key and salt
   * @nullable
   */
  masterKey: PostApiV1AuthSignUp200AllOfThreeDataMasterKey;
  createdAt: string;
  updatedAt: string;
};

export type PostApiV1AuthSignUp200AllOfThree = {
  /** User model with selected fields for responses */
  data: PostApiV1AuthSignUp200AllOfThreeData;
};

/**
 * Response schema for successful signup
 */
export type PostApiV1AuthSignUp200 = PostApiV1AuthSignUp200AllOf &
  PostApiV1AuthSignUp200AllOfThree &
  Required<
    Pick<
      PostApiV1AuthSignUp200AllOf & PostApiV1AuthSignUp200AllOfThree,
      "status" | "message" | "data"
    >
  >;

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthSignUp4xxAnyOfStatus =
  (typeof PostApiV1AuthSignUp4xxAnyOfStatus)[keyof typeof PostApiV1AuthSignUp4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthSignUp4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PostApiV1AuthSignUp4xxAnyOfIssues = unknown | null;

export type PostApiV1AuthSignUp4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthSignUp4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PostApiV1AuthSignUp4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthSignUp4xxAnyOfFourStatus =
  (typeof PostApiV1AuthSignUp4xxAnyOfFourStatus)[keyof typeof PostApiV1AuthSignUp4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthSignUp4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthSignUp4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthSignUp4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthSignUp4xxAnyOfSixStatus =
  (typeof PostApiV1AuthSignUp4xxAnyOfSixStatus)[keyof typeof PostApiV1AuthSignUp4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthSignUp4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthSignUp4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthSignUp4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PostApiV1AuthSignUp4xx =
  | PostApiV1AuthSignUp4xxAnyOf
  | PostApiV1AuthSignUp4xxAnyOfFour
  | PostApiV1AuthSignUp4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthSignUp5xxAnyOfStatus =
  (typeof PostApiV1AuthSignUp5xxAnyOfStatus)[keyof typeof PostApiV1AuthSignUp5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthSignUp5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PostApiV1AuthSignUp5xxAnyOfIssues = unknown | null;

export type PostApiV1AuthSignUp5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthSignUp5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PostApiV1AuthSignUp5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthSignUp5xxAnyOfFourStatus =
  (typeof PostApiV1AuthSignUp5xxAnyOfFourStatus)[keyof typeof PostApiV1AuthSignUp5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthSignUp5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthSignUp5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthSignUp5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthSignUp5xxAnyOfSixStatus =
  (typeof PostApiV1AuthSignUp5xxAnyOfSixStatus)[keyof typeof PostApiV1AuthSignUp5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthSignUp5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthSignUp5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthSignUp5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PostApiV1AuthSignUp5xx =
  | PostApiV1AuthSignUp5xxAnyOf
  | PostApiV1AuthSignUp5xxAnyOfFour
  | PostApiV1AuthSignUp5xxAnyOfSix;

/**
 * Schema for user signin data
 */
export type PostApiV1AuthSignInBody = {
  /**
   * Email address for the account
   * @maxLength 255
   */
  email: string;
  /**
   * User account password
   * @minLength 8
   */
  password: string;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthSignIn200AllOfStatus =
  (typeof PostApiV1AuthSignIn200AllOfStatus)[keyof typeof PostApiV1AuthSignIn200AllOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthSignIn200AllOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * Generic response schema with status and message
 */
export type PostApiV1AuthSignIn200AllOf = {
  /** Response status indicating success, failure or error */
  status: PostApiV1AuthSignIn200AllOfStatus;
  message: string;
};

/**
 * Encrypted master key
 * @nullable
 */
export type PostApiV1AuthSignIn200AllOfThreeDataMasterKey = {
  /** @minLength 1 */
  iv: string;
  /** @minLength 1 */
  encrypted: string;
  /** @minLength 1 */
  salt: string;
} | null;

export type PostApiV1AuthSignIn200AllOfThreeData = {
  /**
   * JWT access token
   * @minLength 1
   */
  token: string;
  /**
   * JWT refresh token
   * @minLength 1
   */
  refreshToken: string;
  /**
   * User ID
   * @minimum 1
   */
  id: number;
  /** User email address */
  email: string;
  /**
   * Username
   * @minLength 1
   */
  userName: string;
  /**
   * Encrypted master key
   * @nullable
   */
  masterKey: PostApiV1AuthSignIn200AllOfThreeDataMasterKey;
  /** Email verification status */
  isVerified: boolean;
};

export type PostApiV1AuthSignIn200AllOfThree = {
  data: PostApiV1AuthSignIn200AllOfThreeData;
};

/**
 * Response schema for successful signin
 */
export type PostApiV1AuthSignIn200 = PostApiV1AuthSignIn200AllOf &
  PostApiV1AuthSignIn200AllOfThree &
  Required<
    Pick<
      PostApiV1AuthSignIn200AllOf & PostApiV1AuthSignIn200AllOfThree,
      "status" | "message" | "data"
    >
  >;

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthSignIn4xxAnyOfStatus =
  (typeof PostApiV1AuthSignIn4xxAnyOfStatus)[keyof typeof PostApiV1AuthSignIn4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthSignIn4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PostApiV1AuthSignIn4xxAnyOfIssues = unknown | null;

export type PostApiV1AuthSignIn4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthSignIn4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PostApiV1AuthSignIn4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthSignIn4xxAnyOfFourStatus =
  (typeof PostApiV1AuthSignIn4xxAnyOfFourStatus)[keyof typeof PostApiV1AuthSignIn4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthSignIn4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthSignIn4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthSignIn4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthSignIn4xxAnyOfSixStatus =
  (typeof PostApiV1AuthSignIn4xxAnyOfSixStatus)[keyof typeof PostApiV1AuthSignIn4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthSignIn4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthSignIn4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthSignIn4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PostApiV1AuthSignIn4xx =
  | PostApiV1AuthSignIn4xxAnyOf
  | PostApiV1AuthSignIn4xxAnyOfFour
  | PostApiV1AuthSignIn4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthSignIn5xxAnyOfStatus =
  (typeof PostApiV1AuthSignIn5xxAnyOfStatus)[keyof typeof PostApiV1AuthSignIn5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthSignIn5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PostApiV1AuthSignIn5xxAnyOfIssues = unknown | null;

export type PostApiV1AuthSignIn5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthSignIn5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PostApiV1AuthSignIn5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthSignIn5xxAnyOfFourStatus =
  (typeof PostApiV1AuthSignIn5xxAnyOfFourStatus)[keyof typeof PostApiV1AuthSignIn5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthSignIn5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthSignIn5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthSignIn5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthSignIn5xxAnyOfSixStatus =
  (typeof PostApiV1AuthSignIn5xxAnyOfSixStatus)[keyof typeof PostApiV1AuthSignIn5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthSignIn5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthSignIn5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthSignIn5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PostApiV1AuthSignIn5xx =
  | PostApiV1AuthSignIn5xxAnyOf
  | PostApiV1AuthSignIn5xxAnyOfFour
  | PostApiV1AuthSignIn5xxAnyOfSix;

/**
 * Schema for refresh token request
 */
export type PostApiV1AuthRefreshTokenBody = {
  /** JWT refresh token */
  refreshToken: string;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthRefreshToken200AllOfStatus =
  (typeof PostApiV1AuthRefreshToken200AllOfStatus)[keyof typeof PostApiV1AuthRefreshToken200AllOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthRefreshToken200AllOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * Generic response schema with status and message
 */
export type PostApiV1AuthRefreshToken200AllOf = {
  /** Response status indicating success, failure or error */
  status: PostApiV1AuthRefreshToken200AllOfStatus;
  message: string;
};

export type PostApiV1AuthRefreshToken200AllOfThreeData = {
  /**
   * New JWT access token
   * @minLength 1
   */
  token: string;
  /**
   * New JWT refresh token
   * @minLength 1
   */
  refreshToken: string;
};

export type PostApiV1AuthRefreshToken200AllOfThree = {
  data: PostApiV1AuthRefreshToken200AllOfThreeData;
};

/**
 * Response schema for token refresh
 */
export type PostApiV1AuthRefreshToken200 = PostApiV1AuthRefreshToken200AllOf &
  PostApiV1AuthRefreshToken200AllOfThree &
  Required<
    Pick<
      PostApiV1AuthRefreshToken200AllOf &
        PostApiV1AuthRefreshToken200AllOfThree,
      "status" | "message" | "data"
    >
  >;

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthRefreshToken4xxAnyOfStatus =
  (typeof PostApiV1AuthRefreshToken4xxAnyOfStatus)[keyof typeof PostApiV1AuthRefreshToken4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthRefreshToken4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PostApiV1AuthRefreshToken4xxAnyOfIssues = unknown | null;

export type PostApiV1AuthRefreshToken4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthRefreshToken4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PostApiV1AuthRefreshToken4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthRefreshToken4xxAnyOfFourStatus =
  (typeof PostApiV1AuthRefreshToken4xxAnyOfFourStatus)[keyof typeof PostApiV1AuthRefreshToken4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthRefreshToken4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthRefreshToken4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthRefreshToken4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthRefreshToken4xxAnyOfSixStatus =
  (typeof PostApiV1AuthRefreshToken4xxAnyOfSixStatus)[keyof typeof PostApiV1AuthRefreshToken4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthRefreshToken4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthRefreshToken4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthRefreshToken4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PostApiV1AuthRefreshToken4xx =
  | PostApiV1AuthRefreshToken4xxAnyOf
  | PostApiV1AuthRefreshToken4xxAnyOfFour
  | PostApiV1AuthRefreshToken4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthRefreshToken5xxAnyOfStatus =
  (typeof PostApiV1AuthRefreshToken5xxAnyOfStatus)[keyof typeof PostApiV1AuthRefreshToken5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthRefreshToken5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PostApiV1AuthRefreshToken5xxAnyOfIssues = unknown | null;

export type PostApiV1AuthRefreshToken5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthRefreshToken5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PostApiV1AuthRefreshToken5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthRefreshToken5xxAnyOfFourStatus =
  (typeof PostApiV1AuthRefreshToken5xxAnyOfFourStatus)[keyof typeof PostApiV1AuthRefreshToken5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthRefreshToken5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthRefreshToken5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthRefreshToken5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthRefreshToken5xxAnyOfSixStatus =
  (typeof PostApiV1AuthRefreshToken5xxAnyOfSixStatus)[keyof typeof PostApiV1AuthRefreshToken5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthRefreshToken5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthRefreshToken5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthRefreshToken5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PostApiV1AuthRefreshToken5xx =
  | PostApiV1AuthRefreshToken5xxAnyOf
  | PostApiV1AuthRefreshToken5xxAnyOfFour
  | PostApiV1AuthRefreshToken5xxAnyOfSix;

/**
 * Schema for email verification
 */
export type PatchApiV1AuthVerifyBody = {
  /**
   * User email to verify
   * @minLength 1
   */
  email: string;
  /**
   * One-time password for verification
   * @minLength 6
   * @maxLength 6
   */
  otp: string;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthVerify200Status =
  (typeof PatchApiV1AuthVerify200Status)[keyof typeof PatchApiV1AuthVerify200Status];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthVerify200Status = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * Generic response schema with status and message
 */
export type PatchApiV1AuthVerify200 = {
  /** Response status indicating success, failure or error */
  status: PatchApiV1AuthVerify200Status;
  message: string;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthVerify4xxAnyOfStatus =
  (typeof PatchApiV1AuthVerify4xxAnyOfStatus)[keyof typeof PatchApiV1AuthVerify4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthVerify4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PatchApiV1AuthVerify4xxAnyOfIssues = unknown | null;

export type PatchApiV1AuthVerify4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthVerify4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PatchApiV1AuthVerify4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthVerify4xxAnyOfFourStatus =
  (typeof PatchApiV1AuthVerify4xxAnyOfFourStatus)[keyof typeof PatchApiV1AuthVerify4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthVerify4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PatchApiV1AuthVerify4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthVerify4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthVerify4xxAnyOfSixStatus =
  (typeof PatchApiV1AuthVerify4xxAnyOfSixStatus)[keyof typeof PatchApiV1AuthVerify4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthVerify4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PatchApiV1AuthVerify4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthVerify4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PatchApiV1AuthVerify4xx =
  | PatchApiV1AuthVerify4xxAnyOf
  | PatchApiV1AuthVerify4xxAnyOfFour
  | PatchApiV1AuthVerify4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthVerify5xxAnyOfStatus =
  (typeof PatchApiV1AuthVerify5xxAnyOfStatus)[keyof typeof PatchApiV1AuthVerify5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthVerify5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PatchApiV1AuthVerify5xxAnyOfIssues = unknown | null;

export type PatchApiV1AuthVerify5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthVerify5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PatchApiV1AuthVerify5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthVerify5xxAnyOfFourStatus =
  (typeof PatchApiV1AuthVerify5xxAnyOfFourStatus)[keyof typeof PatchApiV1AuthVerify5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthVerify5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PatchApiV1AuthVerify5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthVerify5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthVerify5xxAnyOfSixStatus =
  (typeof PatchApiV1AuthVerify5xxAnyOfSixStatus)[keyof typeof PatchApiV1AuthVerify5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthVerify5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PatchApiV1AuthVerify5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthVerify5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PatchApiV1AuthVerify5xx =
  | PatchApiV1AuthVerify5xxAnyOf
  | PatchApiV1AuthVerify5xxAnyOfFour
  | PatchApiV1AuthVerify5xxAnyOfSix;

/**
 * Encrypted master key
 */
export type PatchApiV1AuthCreateMasterKeyBodyMasterKey = {
  /** @minLength 1 */
  iv: string;
  /** @minLength 1 */
  encrypted: string;
  /** @minLength 1 */
  salt: string;
};

/**
 * Encrypted recovery key
 */
export type PatchApiV1AuthCreateMasterKeyBodyRecoveryKey = {
  /** @minLength 1 */
  iv: string;
  /** @minLength 1 */
  encrypted: string;
  /** @minLength 1 */
  salt: string;
};

/**
 * Schema for creating master key
 */
export type PatchApiV1AuthCreateMasterKeyBody = {
  /**
   * Master password for the account
   * @minLength 10
   */
  masterPassword: string;
  /** Encrypted master key */
  masterKey: PatchApiV1AuthCreateMasterKeyBodyMasterKey;
  /** Encrypted recovery key */
  recoveryKey: PatchApiV1AuthCreateMasterKeyBodyRecoveryKey;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthCreateMasterKey200Status =
  (typeof PatchApiV1AuthCreateMasterKey200Status)[keyof typeof PatchApiV1AuthCreateMasterKey200Status];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthCreateMasterKey200Status = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * Generic response schema with status and message
 */
export type PatchApiV1AuthCreateMasterKey200 = {
  /** Response status indicating success, failure or error */
  status: PatchApiV1AuthCreateMasterKey200Status;
  message: string;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthCreateMasterKey4xxAnyOfStatus =
  (typeof PatchApiV1AuthCreateMasterKey4xxAnyOfStatus)[keyof typeof PatchApiV1AuthCreateMasterKey4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthCreateMasterKey4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PatchApiV1AuthCreateMasterKey4xxAnyOfIssues = unknown | null;

export type PatchApiV1AuthCreateMasterKey4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthCreateMasterKey4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PatchApiV1AuthCreateMasterKey4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthCreateMasterKey4xxAnyOfFourStatus =
  (typeof PatchApiV1AuthCreateMasterKey4xxAnyOfFourStatus)[keyof typeof PatchApiV1AuthCreateMasterKey4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthCreateMasterKey4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PatchApiV1AuthCreateMasterKey4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthCreateMasterKey4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthCreateMasterKey4xxAnyOfSixStatus =
  (typeof PatchApiV1AuthCreateMasterKey4xxAnyOfSixStatus)[keyof typeof PatchApiV1AuthCreateMasterKey4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthCreateMasterKey4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PatchApiV1AuthCreateMasterKey4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthCreateMasterKey4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PatchApiV1AuthCreateMasterKey4xx =
  | PatchApiV1AuthCreateMasterKey4xxAnyOf
  | PatchApiV1AuthCreateMasterKey4xxAnyOfFour
  | PatchApiV1AuthCreateMasterKey4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthCreateMasterKey5xxAnyOfStatus =
  (typeof PatchApiV1AuthCreateMasterKey5xxAnyOfStatus)[keyof typeof PatchApiV1AuthCreateMasterKey5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthCreateMasterKey5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PatchApiV1AuthCreateMasterKey5xxAnyOfIssues = unknown | null;

export type PatchApiV1AuthCreateMasterKey5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthCreateMasterKey5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PatchApiV1AuthCreateMasterKey5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthCreateMasterKey5xxAnyOfFourStatus =
  (typeof PatchApiV1AuthCreateMasterKey5xxAnyOfFourStatus)[keyof typeof PatchApiV1AuthCreateMasterKey5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthCreateMasterKey5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PatchApiV1AuthCreateMasterKey5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthCreateMasterKey5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthCreateMasterKey5xxAnyOfSixStatus =
  (typeof PatchApiV1AuthCreateMasterKey5xxAnyOfSixStatus)[keyof typeof PatchApiV1AuthCreateMasterKey5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthCreateMasterKey5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PatchApiV1AuthCreateMasterKey5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthCreateMasterKey5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PatchApiV1AuthCreateMasterKey5xx =
  | PatchApiV1AuthCreateMasterKey5xxAnyOf
  | PatchApiV1AuthCreateMasterKey5xxAnyOfFour
  | PatchApiV1AuthCreateMasterKey5xxAnyOfSix;

/**
 * Schema for master password verification
 */
export type PostApiV1AuthVerifyMasterPasswordBody = {
  /**
   * Master password to verify
   * @minLength 1
   */
  masterPassword: string;
};

export type PostApiV1AuthVerifyMasterPassword200Status =
  (typeof PostApiV1AuthVerifyMasterPassword200Status)[keyof typeof PostApiV1AuthVerifyMasterPassword200Status];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthVerifyMasterPassword200Status = {
  success: "success",
} as const;

/**
 * Encrypted master key
 */
export type PostApiV1AuthVerifyMasterPassword200DataMasterKey = {
  /** @minLength 1 */
  iv: string;
  /** @minLength 1 */
  encrypted: string;
  /** @minLength 1 */
  salt: string;
};

export type PostApiV1AuthVerifyMasterPassword200Data = {
  /** Encrypted master key */
  masterKey: PostApiV1AuthVerifyMasterPassword200DataMasterKey;
};

/**
 * Response schema for master password verification
 */
export type PostApiV1AuthVerifyMasterPassword200 = {
  status: PostApiV1AuthVerifyMasterPassword200Status;
  data: PostApiV1AuthVerifyMasterPassword200Data;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthVerifyMasterPassword4xxAnyOfStatus =
  (typeof PostApiV1AuthVerifyMasterPassword4xxAnyOfStatus)[keyof typeof PostApiV1AuthVerifyMasterPassword4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthVerifyMasterPassword4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PostApiV1AuthVerifyMasterPassword4xxAnyOfIssues = unknown | null;

export type PostApiV1AuthVerifyMasterPassword4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthVerifyMasterPassword4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PostApiV1AuthVerifyMasterPassword4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthVerifyMasterPassword4xxAnyOfFourStatus =
  (typeof PostApiV1AuthVerifyMasterPassword4xxAnyOfFourStatus)[keyof typeof PostApiV1AuthVerifyMasterPassword4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthVerifyMasterPassword4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthVerifyMasterPassword4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthVerifyMasterPassword4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthVerifyMasterPassword4xxAnyOfSixStatus =
  (typeof PostApiV1AuthVerifyMasterPassword4xxAnyOfSixStatus)[keyof typeof PostApiV1AuthVerifyMasterPassword4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthVerifyMasterPassword4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthVerifyMasterPassword4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthVerifyMasterPassword4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PostApiV1AuthVerifyMasterPassword4xx =
  | PostApiV1AuthVerifyMasterPassword4xxAnyOf
  | PostApiV1AuthVerifyMasterPassword4xxAnyOfFour
  | PostApiV1AuthVerifyMasterPassword4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthVerifyMasterPassword5xxAnyOfStatus =
  (typeof PostApiV1AuthVerifyMasterPassword5xxAnyOfStatus)[keyof typeof PostApiV1AuthVerifyMasterPassword5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthVerifyMasterPassword5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PostApiV1AuthVerifyMasterPassword5xxAnyOfIssues = unknown | null;

export type PostApiV1AuthVerifyMasterPassword5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthVerifyMasterPassword5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PostApiV1AuthVerifyMasterPassword5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthVerifyMasterPassword5xxAnyOfFourStatus =
  (typeof PostApiV1AuthVerifyMasterPassword5xxAnyOfFourStatus)[keyof typeof PostApiV1AuthVerifyMasterPassword5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthVerifyMasterPassword5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthVerifyMasterPassword5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthVerifyMasterPassword5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthVerifyMasterPassword5xxAnyOfSixStatus =
  (typeof PostApiV1AuthVerifyMasterPassword5xxAnyOfSixStatus)[keyof typeof PostApiV1AuthVerifyMasterPassword5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthVerifyMasterPassword5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthVerifyMasterPassword5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthVerifyMasterPassword5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PostApiV1AuthVerifyMasterPassword5xx =
  | PostApiV1AuthVerifyMasterPassword5xxAnyOf
  | PostApiV1AuthVerifyMasterPassword5xxAnyOfFour
  | PostApiV1AuthVerifyMasterPassword5xxAnyOfSix;

/**
 * Schema for OTP resend request
 */
export type PostApiV1AuthResendOtpBody = {
  /** Email to send OTP to */
  email: string;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthResendOtp200Status =
  (typeof PostApiV1AuthResendOtp200Status)[keyof typeof PostApiV1AuthResendOtp200Status];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthResendOtp200Status = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * Generic response schema with status and message
 */
export type PostApiV1AuthResendOtp200 = {
  /** Response status indicating success, failure or error */
  status: PostApiV1AuthResendOtp200Status;
  message: string;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthResendOtp4xxAnyOfStatus =
  (typeof PostApiV1AuthResendOtp4xxAnyOfStatus)[keyof typeof PostApiV1AuthResendOtp4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthResendOtp4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PostApiV1AuthResendOtp4xxAnyOfIssues = unknown | null;

export type PostApiV1AuthResendOtp4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthResendOtp4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PostApiV1AuthResendOtp4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthResendOtp4xxAnyOfFourStatus =
  (typeof PostApiV1AuthResendOtp4xxAnyOfFourStatus)[keyof typeof PostApiV1AuthResendOtp4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthResendOtp4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthResendOtp4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthResendOtp4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthResendOtp4xxAnyOfSixStatus =
  (typeof PostApiV1AuthResendOtp4xxAnyOfSixStatus)[keyof typeof PostApiV1AuthResendOtp4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthResendOtp4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthResendOtp4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthResendOtp4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PostApiV1AuthResendOtp4xx =
  | PostApiV1AuthResendOtp4xxAnyOf
  | PostApiV1AuthResendOtp4xxAnyOfFour
  | PostApiV1AuthResendOtp4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthResendOtp5xxAnyOfStatus =
  (typeof PostApiV1AuthResendOtp5xxAnyOfStatus)[keyof typeof PostApiV1AuthResendOtp5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthResendOtp5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PostApiV1AuthResendOtp5xxAnyOfIssues = unknown | null;

export type PostApiV1AuthResendOtp5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthResendOtp5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PostApiV1AuthResendOtp5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthResendOtp5xxAnyOfFourStatus =
  (typeof PostApiV1AuthResendOtp5xxAnyOfFourStatus)[keyof typeof PostApiV1AuthResendOtp5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthResendOtp5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthResendOtp5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthResendOtp5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthResendOtp5xxAnyOfSixStatus =
  (typeof PostApiV1AuthResendOtp5xxAnyOfSixStatus)[keyof typeof PostApiV1AuthResendOtp5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthResendOtp5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthResendOtp5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthResendOtp5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PostApiV1AuthResendOtp5xx =
  | PostApiV1AuthResendOtp5xxAnyOf
  | PostApiV1AuthResendOtp5xxAnyOfFour
  | PostApiV1AuthResendOtp5xxAnyOfSix;

/**
 * Schema for OTP resend request
 */
export type PostApiV1AuthResetPasswordMailBody = {
  /** Email to send OTP to */
  email: string;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthResetPasswordMail200Status =
  (typeof PostApiV1AuthResetPasswordMail200Status)[keyof typeof PostApiV1AuthResetPasswordMail200Status];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthResetPasswordMail200Status = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * Generic response schema with status and message
 */
export type PostApiV1AuthResetPasswordMail200 = {
  /** Response status indicating success, failure or error */
  status: PostApiV1AuthResetPasswordMail200Status;
  message: string;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthResetPasswordMail4xxAnyOfStatus =
  (typeof PostApiV1AuthResetPasswordMail4xxAnyOfStatus)[keyof typeof PostApiV1AuthResetPasswordMail4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthResetPasswordMail4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PostApiV1AuthResetPasswordMail4xxAnyOfIssues = unknown | null;

export type PostApiV1AuthResetPasswordMail4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthResetPasswordMail4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PostApiV1AuthResetPasswordMail4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthResetPasswordMail4xxAnyOfFourStatus =
  (typeof PostApiV1AuthResetPasswordMail4xxAnyOfFourStatus)[keyof typeof PostApiV1AuthResetPasswordMail4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthResetPasswordMail4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthResetPasswordMail4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthResetPasswordMail4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthResetPasswordMail4xxAnyOfSixStatus =
  (typeof PostApiV1AuthResetPasswordMail4xxAnyOfSixStatus)[keyof typeof PostApiV1AuthResetPasswordMail4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthResetPasswordMail4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthResetPasswordMail4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthResetPasswordMail4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PostApiV1AuthResetPasswordMail4xx =
  | PostApiV1AuthResetPasswordMail4xxAnyOf
  | PostApiV1AuthResetPasswordMail4xxAnyOfFour
  | PostApiV1AuthResetPasswordMail4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthResetPasswordMail5xxAnyOfStatus =
  (typeof PostApiV1AuthResetPasswordMail5xxAnyOfStatus)[keyof typeof PostApiV1AuthResetPasswordMail5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthResetPasswordMail5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PostApiV1AuthResetPasswordMail5xxAnyOfIssues = unknown | null;

export type PostApiV1AuthResetPasswordMail5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthResetPasswordMail5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PostApiV1AuthResetPasswordMail5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthResetPasswordMail5xxAnyOfFourStatus =
  (typeof PostApiV1AuthResetPasswordMail5xxAnyOfFourStatus)[keyof typeof PostApiV1AuthResetPasswordMail5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthResetPasswordMail5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthResetPasswordMail5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthResetPasswordMail5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1AuthResetPasswordMail5xxAnyOfSixStatus =
  (typeof PostApiV1AuthResetPasswordMail5xxAnyOfSixStatus)[keyof typeof PostApiV1AuthResetPasswordMail5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1AuthResetPasswordMail5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1AuthResetPasswordMail5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1AuthResetPasswordMail5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PostApiV1AuthResetPasswordMail5xx =
  | PostApiV1AuthResetPasswordMail5xxAnyOf
  | PostApiV1AuthResetPasswordMail5xxAnyOfFour
  | PostApiV1AuthResetPasswordMail5xxAnyOfSix;

/**
 * Schema for password reset
 */
export type PatchApiV1AuthResetPasswordBody = {
  /**
   * JWT reset token
   * @pattern ^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$
   */
  token: string;
  /**
   * Password for the account
   * @minLength 8
   */
  password: string;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthResetPassword200Status =
  (typeof PatchApiV1AuthResetPassword200Status)[keyof typeof PatchApiV1AuthResetPassword200Status];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthResetPassword200Status = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * Generic response schema with status and message
 */
export type PatchApiV1AuthResetPassword200 = {
  /** Response status indicating success, failure or error */
  status: PatchApiV1AuthResetPassword200Status;
  message: string;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthResetPassword4xxAnyOfStatus =
  (typeof PatchApiV1AuthResetPassword4xxAnyOfStatus)[keyof typeof PatchApiV1AuthResetPassword4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthResetPassword4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PatchApiV1AuthResetPassword4xxAnyOfIssues = unknown | null;

export type PatchApiV1AuthResetPassword4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthResetPassword4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PatchApiV1AuthResetPassword4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthResetPassword4xxAnyOfFourStatus =
  (typeof PatchApiV1AuthResetPassword4xxAnyOfFourStatus)[keyof typeof PatchApiV1AuthResetPassword4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthResetPassword4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PatchApiV1AuthResetPassword4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthResetPassword4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthResetPassword4xxAnyOfSixStatus =
  (typeof PatchApiV1AuthResetPassword4xxAnyOfSixStatus)[keyof typeof PatchApiV1AuthResetPassword4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthResetPassword4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PatchApiV1AuthResetPassword4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthResetPassword4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PatchApiV1AuthResetPassword4xx =
  | PatchApiV1AuthResetPassword4xxAnyOf
  | PatchApiV1AuthResetPassword4xxAnyOfFour
  | PatchApiV1AuthResetPassword4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthResetPassword5xxAnyOfStatus =
  (typeof PatchApiV1AuthResetPassword5xxAnyOfStatus)[keyof typeof PatchApiV1AuthResetPassword5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthResetPassword5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PatchApiV1AuthResetPassword5xxAnyOfIssues = unknown | null;

export type PatchApiV1AuthResetPassword5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthResetPassword5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PatchApiV1AuthResetPassword5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthResetPassword5xxAnyOfFourStatus =
  (typeof PatchApiV1AuthResetPassword5xxAnyOfFourStatus)[keyof typeof PatchApiV1AuthResetPassword5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthResetPassword5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PatchApiV1AuthResetPassword5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthResetPassword5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthResetPassword5xxAnyOfSixStatus =
  (typeof PatchApiV1AuthResetPassword5xxAnyOfSixStatus)[keyof typeof PatchApiV1AuthResetPassword5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthResetPassword5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PatchApiV1AuthResetPassword5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthResetPassword5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PatchApiV1AuthResetPassword5xx =
  | PatchApiV1AuthResetPassword5xxAnyOf
  | PatchApiV1AuthResetPassword5xxAnyOfFour
  | PatchApiV1AuthResetPassword5xxAnyOfSix;

/**
 * New encrypted master key
 */
export type PatchApiV1AuthMasterPasswordBodyMasterKey = {
  /** @minLength 1 */
  iv: string;
  /** @minLength 1 */
  encrypted: string;
  /** @minLength 1 */
  salt: string;
};

/**
 * New encrypted recovery key
 */
export type PatchApiV1AuthMasterPasswordBodyRecoveryKey = {
  /** @minLength 1 */
  iv: string;
  /** @minLength 1 */
  encrypted: string;
  /** @minLength 1 */
  salt: string;
};

/**
 * Schema for updating master password
 */
export type PatchApiV1AuthMasterPasswordBody = {
  /**
   * Master password for the account
   * @minLength 10
   */
  masterPassword: string;
  /** New encrypted master key */
  masterKey: PatchApiV1AuthMasterPasswordBodyMasterKey;
  /** New encrypted recovery key */
  recoveryKey: PatchApiV1AuthMasterPasswordBodyRecoveryKey;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthMasterPassword200Status =
  (typeof PatchApiV1AuthMasterPassword200Status)[keyof typeof PatchApiV1AuthMasterPassword200Status];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthMasterPassword200Status = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * Generic response schema with status and message
 */
export type PatchApiV1AuthMasterPassword200 = {
  /** Response status indicating success, failure or error */
  status: PatchApiV1AuthMasterPassword200Status;
  message: string;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthMasterPassword4xxAnyOfStatus =
  (typeof PatchApiV1AuthMasterPassword4xxAnyOfStatus)[keyof typeof PatchApiV1AuthMasterPassword4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthMasterPassword4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PatchApiV1AuthMasterPassword4xxAnyOfIssues = unknown | null;

export type PatchApiV1AuthMasterPassword4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthMasterPassword4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PatchApiV1AuthMasterPassword4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthMasterPassword4xxAnyOfFourStatus =
  (typeof PatchApiV1AuthMasterPassword4xxAnyOfFourStatus)[keyof typeof PatchApiV1AuthMasterPassword4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthMasterPassword4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PatchApiV1AuthMasterPassword4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthMasterPassword4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthMasterPassword4xxAnyOfSixStatus =
  (typeof PatchApiV1AuthMasterPassword4xxAnyOfSixStatus)[keyof typeof PatchApiV1AuthMasterPassword4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthMasterPassword4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PatchApiV1AuthMasterPassword4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthMasterPassword4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PatchApiV1AuthMasterPassword4xx =
  | PatchApiV1AuthMasterPassword4xxAnyOf
  | PatchApiV1AuthMasterPassword4xxAnyOfFour
  | PatchApiV1AuthMasterPassword4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthMasterPassword5xxAnyOfStatus =
  (typeof PatchApiV1AuthMasterPassword5xxAnyOfStatus)[keyof typeof PatchApiV1AuthMasterPassword5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthMasterPassword5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PatchApiV1AuthMasterPassword5xxAnyOfIssues = unknown | null;

export type PatchApiV1AuthMasterPassword5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthMasterPassword5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PatchApiV1AuthMasterPassword5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthMasterPassword5xxAnyOfFourStatus =
  (typeof PatchApiV1AuthMasterPassword5xxAnyOfFourStatus)[keyof typeof PatchApiV1AuthMasterPassword5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthMasterPassword5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PatchApiV1AuthMasterPassword5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthMasterPassword5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1AuthMasterPassword5xxAnyOfSixStatus =
  (typeof PatchApiV1AuthMasterPassword5xxAnyOfSixStatus)[keyof typeof PatchApiV1AuthMasterPassword5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1AuthMasterPassword5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PatchApiV1AuthMasterPassword5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1AuthMasterPassword5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PatchApiV1AuthMasterPassword5xx =
  | PatchApiV1AuthMasterPassword5xxAnyOf
  | PatchApiV1AuthMasterPassword5xxAnyOfFour
  | PatchApiV1AuthMasterPassword5xxAnyOfSix;

export type PostApiV1FilesUploadBody = {
  file: string;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1FilesUpload200AllOfStatus =
  (typeof PostApiV1FilesUpload200AllOfStatus)[keyof typeof PostApiV1FilesUpload200AllOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1FilesUpload200AllOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * Generic response schema with status and message
 */
export type PostApiV1FilesUpload200AllOf = {
  /** Response status indicating success, failure or error */
  status: PostApiV1FilesUpload200AllOfStatus;
  message: string;
};

/**
 * Schema for file selection
 */
export type PostApiV1FilesUpload200AllOfThreeData = {
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  id: number;
  /** @maxLength 512 */
  url: string;
  /** @maxLength 256 */
  fileKey: string;
  createdAt: string;
  updatedAt: string;
};

export type PostApiV1FilesUpload200AllOfThree = {
  /** Schema for file selection */
  data: PostApiV1FilesUpload200AllOfThreeData;
};

/**
 * Schema for file upload response
 */
export type PostApiV1FilesUpload200 = PostApiV1FilesUpload200AllOf &
  PostApiV1FilesUpload200AllOfThree &
  Required<
    Pick<
      PostApiV1FilesUpload200AllOf & PostApiV1FilesUpload200AllOfThree,
      "status" | "message" | "data"
    >
  >;

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1FilesUpload4xxAnyOfStatus =
  (typeof PostApiV1FilesUpload4xxAnyOfStatus)[keyof typeof PostApiV1FilesUpload4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1FilesUpload4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PostApiV1FilesUpload4xxAnyOfIssues = unknown | null;

export type PostApiV1FilesUpload4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1FilesUpload4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PostApiV1FilesUpload4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1FilesUpload4xxAnyOfFourStatus =
  (typeof PostApiV1FilesUpload4xxAnyOfFourStatus)[keyof typeof PostApiV1FilesUpload4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1FilesUpload4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1FilesUpload4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1FilesUpload4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1FilesUpload4xxAnyOfSixStatus =
  (typeof PostApiV1FilesUpload4xxAnyOfSixStatus)[keyof typeof PostApiV1FilesUpload4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1FilesUpload4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1FilesUpload4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1FilesUpload4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PostApiV1FilesUpload4xx =
  | PostApiV1FilesUpload4xxAnyOf
  | PostApiV1FilesUpload4xxAnyOfFour
  | PostApiV1FilesUpload4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1FilesUpload5xxAnyOfStatus =
  (typeof PostApiV1FilesUpload5xxAnyOfStatus)[keyof typeof PostApiV1FilesUpload5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1FilesUpload5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PostApiV1FilesUpload5xxAnyOfIssues = unknown | null;

export type PostApiV1FilesUpload5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1FilesUpload5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PostApiV1FilesUpload5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1FilesUpload5xxAnyOfFourStatus =
  (typeof PostApiV1FilesUpload5xxAnyOfFourStatus)[keyof typeof PostApiV1FilesUpload5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1FilesUpload5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1FilesUpload5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1FilesUpload5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1FilesUpload5xxAnyOfSixStatus =
  (typeof PostApiV1FilesUpload5xxAnyOfSixStatus)[keyof typeof PostApiV1FilesUpload5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1FilesUpload5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1FilesUpload5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1FilesUpload5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PostApiV1FilesUpload5xx =
  | PostApiV1FilesUpload5xxAnyOf
  | PostApiV1FilesUpload5xxAnyOfFour
  | PostApiV1FilesUpload5xxAnyOfSix;

export type GetHealth200Status =
  (typeof GetHealth200Status)[keyof typeof GetHealth200Status];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetHealth200Status = {
  "Hello,_World!": "Hello, World!",
} as const;

export type GetHealth200 = {
  status: GetHealth200Status;
};

/**
 * Schema for encrypted password data
 */
export type PostApiV1PasswordsBodyPassword = {
  /**
   * Initialization vector for encryption
   * @minLength 1
   */
  iv: string;
  /**
   * Encrypted password string
   * @minLength 1
   */
  encrypted: string;
};

/**
 * Schema for adding a new password
 */
export type PostApiV1PasswordsBody = {
  /**
   * ID of the vault this password belongs to
   * @minimum 0
   * @maximum 2147483647
   */
  vaultId: number;
  /**
   * Username for the account
   * @minLength 1
   * @maxLength 255
   */
  username: string;
  /** Schema for encrypted password data */
  password: PostApiV1PasswordsBodyPassword;
  /**
   * Name of the application or website
   * @minLength 1
   * @maxLength 255
   */
  site: string;
  /**
   * URL of the service favicon
   * @maxLength 255
   * @nullable
   */
  faviconUrl?: string | null;
  /**
   * Additional notes about the account
   * @maxLength 500
   * @nullable
   */
  note?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1Passwords200AllOfStatus =
  (typeof PostApiV1Passwords200AllOfStatus)[keyof typeof PostApiV1Passwords200AllOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1Passwords200AllOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * Generic response schema with status and message
 */
export type PostApiV1Passwords200AllOf = {
  /** Response status indicating success, failure or error */
  status: PostApiV1Passwords200AllOfStatus;
  message: string;
};

/**
 * Password for the account
 */
export type PostApiV1Passwords200AllOfThreeDataPassword = {
  /**
   * Initialization vector for encryption
   * @minLength 1
   */
  iv: string;
  /**
   * Encrypted password string
   * @minLength 1
   */
  encrypted: string;
};

/**
 * Schema for selecting password records
 */
export type PostApiV1Passwords200AllOfThreeData = {
  /**
   * Unique identifier for the password record
   * @minimum -2147483648
   * @maximum 2147483647
   */
  id: number;
  /**
   * User id
   * @minimum -2147483648
   * @maximum 2147483647
   */
  userId: number;
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  vaultId: number;
  /**
   * Name of the application or website
   * @maxLength 255
   */
  site: string;
  /**
   * Username for the account
   * @maxLength 255
   */
  username: string;
  /** Password for the account */
  password: PostApiV1Passwords200AllOfThreeDataPassword;
  /**
   * URL of the service favicon
   * @maxLength 255
   * @nullable
   */
  faviconUrl: string | null;
  /**
   * Additional notes about the account
   * @maxLength 500
   * @nullable
   */
  note: string | null;
  /** Timestamp when the record was created */
  createdAt: string;
  /** Timestamp when the record was last updated */
  updatedAt: string;
};

export type PostApiV1Passwords200AllOfThree = {
  /** Schema for selecting password records */
  data: PostApiV1Passwords200AllOfThreeData;
};

/**
 * Schema for add/update/delete password response
 */
export type PostApiV1Passwords200 = PostApiV1Passwords200AllOf &
  PostApiV1Passwords200AllOfThree &
  Required<
    Pick<
      PostApiV1Passwords200AllOf & PostApiV1Passwords200AllOfThree,
      "status" | "message" | "data"
    >
  >;

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1Passwords4xxAnyOfStatus =
  (typeof PostApiV1Passwords4xxAnyOfStatus)[keyof typeof PostApiV1Passwords4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1Passwords4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PostApiV1Passwords4xxAnyOfIssues = unknown | null;

export type PostApiV1Passwords4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1Passwords4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PostApiV1Passwords4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1Passwords4xxAnyOfFourStatus =
  (typeof PostApiV1Passwords4xxAnyOfFourStatus)[keyof typeof PostApiV1Passwords4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1Passwords4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1Passwords4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1Passwords4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1Passwords4xxAnyOfSixStatus =
  (typeof PostApiV1Passwords4xxAnyOfSixStatus)[keyof typeof PostApiV1Passwords4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1Passwords4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1Passwords4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1Passwords4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PostApiV1Passwords4xx =
  | PostApiV1Passwords4xxAnyOf
  | PostApiV1Passwords4xxAnyOfFour
  | PostApiV1Passwords4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1Passwords5xxAnyOfStatus =
  (typeof PostApiV1Passwords5xxAnyOfStatus)[keyof typeof PostApiV1Passwords5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1Passwords5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PostApiV1Passwords5xxAnyOfIssues = unknown | null;

export type PostApiV1Passwords5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1Passwords5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PostApiV1Passwords5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1Passwords5xxAnyOfFourStatus =
  (typeof PostApiV1Passwords5xxAnyOfFourStatus)[keyof typeof PostApiV1Passwords5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1Passwords5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1Passwords5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1Passwords5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1Passwords5xxAnyOfSixStatus =
  (typeof PostApiV1Passwords5xxAnyOfSixStatus)[keyof typeof PostApiV1Passwords5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1Passwords5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1Passwords5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1Passwords5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PostApiV1Passwords5xx =
  | PostApiV1Passwords5xxAnyOf
  | PostApiV1Passwords5xxAnyOfFour
  | PostApiV1Passwords5xxAnyOfSix;

export type GetApiV1PasswordsParams = {
  /**
   * ID of the vault to fetch passwords from
   */
  vaultId: number;
  /**
   * Search string to filter passwords
   */
  search?: string;
};

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1Passwords200Status =
  (typeof GetApiV1Passwords200Status)[keyof typeof GetApiV1Passwords200Status];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1Passwords200Status = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * Password for the account
 */
export type GetApiV1Passwords200DataItemPassword = {
  /**
   * Initialization vector for encryption
   * @minLength 1
   */
  iv: string;
  /**
   * Encrypted password string
   * @minLength 1
   */
  encrypted: string;
};

/**
 * Schema for selecting password records
 */
export type GetApiV1Passwords200DataItem = {
  /**
   * Unique identifier for the password record
   * @minimum -2147483648
   * @maximum 2147483647
   */
  id: number;
  /**
   * User id
   * @minimum -2147483648
   * @maximum 2147483647
   */
  userId: number;
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  vaultId: number;
  /**
   * Name of the application or website
   * @maxLength 255
   */
  site: string;
  /**
   * Username for the account
   * @maxLength 255
   */
  username: string;
  /** Password for the account */
  password: GetApiV1Passwords200DataItemPassword;
  /**
   * URL of the service favicon
   * @maxLength 255
   * @nullable
   */
  faviconUrl: string | null;
  /**
   * Additional notes about the account
   * @maxLength 500
   * @nullable
   */
  note: string | null;
  /** Timestamp when the record was created */
  createdAt: string;
  /** Timestamp when the record was last updated */
  updatedAt: string;
};

/**
 * Schema for get passwords response
 */
export type GetApiV1Passwords200 = {
  /** Response status indicating success, failure or error */
  status: GetApiV1Passwords200Status;
  data: GetApiV1Passwords200DataItem[];
};

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1Passwords4xxAnyOfStatus =
  (typeof GetApiV1Passwords4xxAnyOfStatus)[keyof typeof GetApiV1Passwords4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1Passwords4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type GetApiV1Passwords4xxAnyOfIssues = unknown | null;

export type GetApiV1Passwords4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1Passwords4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: GetApiV1Passwords4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1Passwords4xxAnyOfFourStatus =
  (typeof GetApiV1Passwords4xxAnyOfFourStatus)[keyof typeof GetApiV1Passwords4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1Passwords4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type GetApiV1Passwords4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1Passwords4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1Passwords4xxAnyOfSixStatus =
  (typeof GetApiV1Passwords4xxAnyOfSixStatus)[keyof typeof GetApiV1Passwords4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1Passwords4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type GetApiV1Passwords4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1Passwords4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type GetApiV1Passwords4xx =
  | GetApiV1Passwords4xxAnyOf
  | GetApiV1Passwords4xxAnyOfFour
  | GetApiV1Passwords4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1Passwords5xxAnyOfStatus =
  (typeof GetApiV1Passwords5xxAnyOfStatus)[keyof typeof GetApiV1Passwords5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1Passwords5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type GetApiV1Passwords5xxAnyOfIssues = unknown | null;

export type GetApiV1Passwords5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1Passwords5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: GetApiV1Passwords5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1Passwords5xxAnyOfFourStatus =
  (typeof GetApiV1Passwords5xxAnyOfFourStatus)[keyof typeof GetApiV1Passwords5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1Passwords5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type GetApiV1Passwords5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1Passwords5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1Passwords5xxAnyOfSixStatus =
  (typeof GetApiV1Passwords5xxAnyOfSixStatus)[keyof typeof GetApiV1Passwords5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1Passwords5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type GetApiV1Passwords5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1Passwords5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type GetApiV1Passwords5xx =
  | GetApiV1Passwords5xxAnyOf
  | GetApiV1Passwords5xxAnyOfFour
  | GetApiV1Passwords5xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1PasswordsId200Status =
  (typeof GetApiV1PasswordsId200Status)[keyof typeof GetApiV1PasswordsId200Status];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1PasswordsId200Status = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * Password for the account
 */
export type GetApiV1PasswordsId200DataPassword = {
  /**
   * Initialization vector for encryption
   * @minLength 1
   */
  iv: string;
  /**
   * Encrypted password string
   * @minLength 1
   */
  encrypted: string;
};

/**
 * Schema for selecting password records
 */
export type GetApiV1PasswordsId200Data = {
  /**
   * Unique identifier for the password record
   * @minimum -2147483648
   * @maximum 2147483647
   */
  id: number;
  /**
   * User id
   * @minimum -2147483648
   * @maximum 2147483647
   */
  userId: number;
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  vaultId: number;
  /**
   * Name of the application or website
   * @maxLength 255
   */
  site: string;
  /**
   * Username for the account
   * @maxLength 255
   */
  username: string;
  /** Password for the account */
  password: GetApiV1PasswordsId200DataPassword;
  /**
   * URL of the service favicon
   * @maxLength 255
   * @nullable
   */
  faviconUrl: string | null;
  /**
   * Additional notes about the account
   * @maxLength 500
   * @nullable
   */
  note: string | null;
  /** Timestamp when the record was created */
  createdAt: string;
  /** Timestamp when the record was last updated */
  updatedAt: string;
};

/**
 * Schema for single password response
 */
export type GetApiV1PasswordsId200 = {
  /** Response status indicating success, failure or error */
  status: GetApiV1PasswordsId200Status;
  /** Schema for selecting password records */
  data: GetApiV1PasswordsId200Data;
};

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1PasswordsId4xxAnyOfStatus =
  (typeof GetApiV1PasswordsId4xxAnyOfStatus)[keyof typeof GetApiV1PasswordsId4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1PasswordsId4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type GetApiV1PasswordsId4xxAnyOfIssues = unknown | null;

export type GetApiV1PasswordsId4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1PasswordsId4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: GetApiV1PasswordsId4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1PasswordsId4xxAnyOfFourStatus =
  (typeof GetApiV1PasswordsId4xxAnyOfFourStatus)[keyof typeof GetApiV1PasswordsId4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1PasswordsId4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type GetApiV1PasswordsId4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1PasswordsId4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1PasswordsId4xxAnyOfSixStatus =
  (typeof GetApiV1PasswordsId4xxAnyOfSixStatus)[keyof typeof GetApiV1PasswordsId4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1PasswordsId4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type GetApiV1PasswordsId4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1PasswordsId4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type GetApiV1PasswordsId4xx =
  | GetApiV1PasswordsId4xxAnyOf
  | GetApiV1PasswordsId4xxAnyOfFour
  | GetApiV1PasswordsId4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1PasswordsId5xxAnyOfStatus =
  (typeof GetApiV1PasswordsId5xxAnyOfStatus)[keyof typeof GetApiV1PasswordsId5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1PasswordsId5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type GetApiV1PasswordsId5xxAnyOfIssues = unknown | null;

export type GetApiV1PasswordsId5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1PasswordsId5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: GetApiV1PasswordsId5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1PasswordsId5xxAnyOfFourStatus =
  (typeof GetApiV1PasswordsId5xxAnyOfFourStatus)[keyof typeof GetApiV1PasswordsId5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1PasswordsId5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type GetApiV1PasswordsId5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1PasswordsId5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1PasswordsId5xxAnyOfSixStatus =
  (typeof GetApiV1PasswordsId5xxAnyOfSixStatus)[keyof typeof GetApiV1PasswordsId5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1PasswordsId5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type GetApiV1PasswordsId5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1PasswordsId5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type GetApiV1PasswordsId5xx =
  | GetApiV1PasswordsId5xxAnyOf
  | GetApiV1PasswordsId5xxAnyOfFour
  | GetApiV1PasswordsId5xxAnyOfSix;

/**
 * Password for the account
 */
export type PutApiV1PasswordsIdBodyPassword = {
  /**
   * Initialization vector for encryption
   * @minLength 1
   */
  iv: string;
  /**
   * Encrypted password string
   * @minLength 1
   */
  encrypted: string;
};

/**
 * Schema for updating an existing password
 */
export type PutApiV1PasswordsIdBody = {
  /**
   * Username for the account
   * @minLength 1
   * @maxLength 255
   */
  username: string;
  /** Password for the account */
  password: PutApiV1PasswordsIdBodyPassword;
  /**
   * Name of the application or website
   * @minLength 1
   * @maxLength 255
   */
  site: string;
  /**
   * URL of the service favicon
   * @maxLength 255
   * @nullable
   */
  faviconUrl?: string | null;
  /**
   * Additional notes about the account
   * @maxLength 500
   * @nullable
   */
  note?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PutApiV1PasswordsId200AllOfStatus =
  (typeof PutApiV1PasswordsId200AllOfStatus)[keyof typeof PutApiV1PasswordsId200AllOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PutApiV1PasswordsId200AllOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * Generic response schema with status and message
 */
export type PutApiV1PasswordsId200AllOf = {
  /** Response status indicating success, failure or error */
  status: PutApiV1PasswordsId200AllOfStatus;
  message: string;
};

/**
 * Password for the account
 */
export type PutApiV1PasswordsId200AllOfThreeDataPassword = {
  /**
   * Initialization vector for encryption
   * @minLength 1
   */
  iv: string;
  /**
   * Encrypted password string
   * @minLength 1
   */
  encrypted: string;
};

/**
 * Schema for selecting password records
 */
export type PutApiV1PasswordsId200AllOfThreeData = {
  /**
   * Unique identifier for the password record
   * @minimum -2147483648
   * @maximum 2147483647
   */
  id: number;
  /**
   * User id
   * @minimum -2147483648
   * @maximum 2147483647
   */
  userId: number;
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  vaultId: number;
  /**
   * Name of the application or website
   * @maxLength 255
   */
  site: string;
  /**
   * Username for the account
   * @maxLength 255
   */
  username: string;
  /** Password for the account */
  password: PutApiV1PasswordsId200AllOfThreeDataPassword;
  /**
   * URL of the service favicon
   * @maxLength 255
   * @nullable
   */
  faviconUrl: string | null;
  /**
   * Additional notes about the account
   * @maxLength 500
   * @nullable
   */
  note: string | null;
  /** Timestamp when the record was created */
  createdAt: string;
  /** Timestamp when the record was last updated */
  updatedAt: string;
};

export type PutApiV1PasswordsId200AllOfThree = {
  /** Schema for selecting password records */
  data: PutApiV1PasswordsId200AllOfThreeData;
};

/**
 * Schema for add/update/delete password response
 */
export type PutApiV1PasswordsId200 = PutApiV1PasswordsId200AllOf &
  PutApiV1PasswordsId200AllOfThree &
  Required<
    Pick<
      PutApiV1PasswordsId200AllOf & PutApiV1PasswordsId200AllOfThree,
      "status" | "message" | "data"
    >
  >;

/**
 * Response status indicating success, failure or error
 */
export type PutApiV1PasswordsId4xxAnyOfStatus =
  (typeof PutApiV1PasswordsId4xxAnyOfStatus)[keyof typeof PutApiV1PasswordsId4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PutApiV1PasswordsId4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PutApiV1PasswordsId4xxAnyOfIssues = unknown | null;

export type PutApiV1PasswordsId4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PutApiV1PasswordsId4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PutApiV1PasswordsId4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PutApiV1PasswordsId4xxAnyOfFourStatus =
  (typeof PutApiV1PasswordsId4xxAnyOfFourStatus)[keyof typeof PutApiV1PasswordsId4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PutApiV1PasswordsId4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PutApiV1PasswordsId4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PutApiV1PasswordsId4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PutApiV1PasswordsId4xxAnyOfSixStatus =
  (typeof PutApiV1PasswordsId4xxAnyOfSixStatus)[keyof typeof PutApiV1PasswordsId4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PutApiV1PasswordsId4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PutApiV1PasswordsId4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PutApiV1PasswordsId4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PutApiV1PasswordsId4xx =
  | PutApiV1PasswordsId4xxAnyOf
  | PutApiV1PasswordsId4xxAnyOfFour
  | PutApiV1PasswordsId4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type PutApiV1PasswordsId5xxAnyOfStatus =
  (typeof PutApiV1PasswordsId5xxAnyOfStatus)[keyof typeof PutApiV1PasswordsId5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PutApiV1PasswordsId5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PutApiV1PasswordsId5xxAnyOfIssues = unknown | null;

export type PutApiV1PasswordsId5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PutApiV1PasswordsId5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PutApiV1PasswordsId5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PutApiV1PasswordsId5xxAnyOfFourStatus =
  (typeof PutApiV1PasswordsId5xxAnyOfFourStatus)[keyof typeof PutApiV1PasswordsId5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PutApiV1PasswordsId5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PutApiV1PasswordsId5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PutApiV1PasswordsId5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PutApiV1PasswordsId5xxAnyOfSixStatus =
  (typeof PutApiV1PasswordsId5xxAnyOfSixStatus)[keyof typeof PutApiV1PasswordsId5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PutApiV1PasswordsId5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PutApiV1PasswordsId5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PutApiV1PasswordsId5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PutApiV1PasswordsId5xx =
  | PutApiV1PasswordsId5xxAnyOf
  | PutApiV1PasswordsId5xxAnyOfFour
  | PutApiV1PasswordsId5xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type DeleteApiV1PasswordsId200AllOfStatus =
  (typeof DeleteApiV1PasswordsId200AllOfStatus)[keyof typeof DeleteApiV1PasswordsId200AllOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeleteApiV1PasswordsId200AllOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * Generic response schema with status and message
 */
export type DeleteApiV1PasswordsId200AllOf = {
  /** Response status indicating success, failure or error */
  status: DeleteApiV1PasswordsId200AllOfStatus;
  message: string;
};

/**
 * Password for the account
 */
export type DeleteApiV1PasswordsId200AllOfThreeDataPassword = {
  /**
   * Initialization vector for encryption
   * @minLength 1
   */
  iv: string;
  /**
   * Encrypted password string
   * @minLength 1
   */
  encrypted: string;
};

/**
 * Schema for selecting password records
 */
export type DeleteApiV1PasswordsId200AllOfThreeData = {
  /**
   * Unique identifier for the password record
   * @minimum -2147483648
   * @maximum 2147483647
   */
  id: number;
  /**
   * User id
   * @minimum -2147483648
   * @maximum 2147483647
   */
  userId: number;
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  vaultId: number;
  /**
   * Name of the application or website
   * @maxLength 255
   */
  site: string;
  /**
   * Username for the account
   * @maxLength 255
   */
  username: string;
  /** Password for the account */
  password: DeleteApiV1PasswordsId200AllOfThreeDataPassword;
  /**
   * URL of the service favicon
   * @maxLength 255
   * @nullable
   */
  faviconUrl: string | null;
  /**
   * Additional notes about the account
   * @maxLength 500
   * @nullable
   */
  note: string | null;
  /** Timestamp when the record was created */
  createdAt: string;
  /** Timestamp when the record was last updated */
  updatedAt: string;
};

export type DeleteApiV1PasswordsId200AllOfThree = {
  /** Schema for selecting password records */
  data: DeleteApiV1PasswordsId200AllOfThreeData;
};

/**
 * Schema for add/update/delete password response
 */
export type DeleteApiV1PasswordsId200 = DeleteApiV1PasswordsId200AllOf &
  DeleteApiV1PasswordsId200AllOfThree &
  Required<
    Pick<
      DeleteApiV1PasswordsId200AllOf & DeleteApiV1PasswordsId200AllOfThree,
      "status" | "message" | "data"
    >
  >;

/**
 * Response status indicating success, failure or error
 */
export type DeleteApiV1PasswordsId4xxAnyOfStatus =
  (typeof DeleteApiV1PasswordsId4xxAnyOfStatus)[keyof typeof DeleteApiV1PasswordsId4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeleteApiV1PasswordsId4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type DeleteApiV1PasswordsId4xxAnyOfIssues = unknown | null;

export type DeleteApiV1PasswordsId4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: DeleteApiV1PasswordsId4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: DeleteApiV1PasswordsId4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type DeleteApiV1PasswordsId4xxAnyOfFourStatus =
  (typeof DeleteApiV1PasswordsId4xxAnyOfFourStatus)[keyof typeof DeleteApiV1PasswordsId4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeleteApiV1PasswordsId4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type DeleteApiV1PasswordsId4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: DeleteApiV1PasswordsId4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type DeleteApiV1PasswordsId4xxAnyOfSixStatus =
  (typeof DeleteApiV1PasswordsId4xxAnyOfSixStatus)[keyof typeof DeleteApiV1PasswordsId4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeleteApiV1PasswordsId4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type DeleteApiV1PasswordsId4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: DeleteApiV1PasswordsId4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type DeleteApiV1PasswordsId4xx =
  | DeleteApiV1PasswordsId4xxAnyOf
  | DeleteApiV1PasswordsId4xxAnyOfFour
  | DeleteApiV1PasswordsId4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type DeleteApiV1PasswordsId5xxAnyOfStatus =
  (typeof DeleteApiV1PasswordsId5xxAnyOfStatus)[keyof typeof DeleteApiV1PasswordsId5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeleteApiV1PasswordsId5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type DeleteApiV1PasswordsId5xxAnyOfIssues = unknown | null;

export type DeleteApiV1PasswordsId5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: DeleteApiV1PasswordsId5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: DeleteApiV1PasswordsId5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type DeleteApiV1PasswordsId5xxAnyOfFourStatus =
  (typeof DeleteApiV1PasswordsId5xxAnyOfFourStatus)[keyof typeof DeleteApiV1PasswordsId5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeleteApiV1PasswordsId5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type DeleteApiV1PasswordsId5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: DeleteApiV1PasswordsId5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type DeleteApiV1PasswordsId5xxAnyOfSixStatus =
  (typeof DeleteApiV1PasswordsId5xxAnyOfSixStatus)[keyof typeof DeleteApiV1PasswordsId5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeleteApiV1PasswordsId5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type DeleteApiV1PasswordsId5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: DeleteApiV1PasswordsId5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type DeleteApiV1PasswordsId5xx =
  | DeleteApiV1PasswordsId5xxAnyOf
  | DeleteApiV1PasswordsId5xxAnyOfFour
  | DeleteApiV1PasswordsId5xxAnyOfSix;

/**
 * Schema for encrypted password data
 */
export type PostApiV1PasswordsImportBodyItemPassword = {
  /**
   * Initialization vector for encryption
   * @minLength 1
   */
  iv: string;
  /**
   * Encrypted password string
   * @minLength 1
   */
  encrypted: string;
};

/**
 * Schema for adding a new password
 */
export type PostApiV1PasswordsImportBodyItem = {
  /**
   * ID of the vault this password belongs to
   * @minimum 0
   * @maximum 2147483647
   */
  vaultId: number;
  /**
   * Username for the account
   * @minLength 1
   * @maxLength 255
   */
  username: string;
  /** Schema for encrypted password data */
  password: PostApiV1PasswordsImportBodyItemPassword;
  /**
   * Name of the application or website
   * @minLength 1
   * @maxLength 255
   */
  site: string;
  /**
   * URL of the service favicon
   * @maxLength 255
   * @nullable
   */
  faviconUrl?: string | null;
  /**
   * Additional notes about the account
   * @maxLength 500
   * @nullable
   */
  note?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1PasswordsImport200AllOfStatus =
  (typeof PostApiV1PasswordsImport200AllOfStatus)[keyof typeof PostApiV1PasswordsImport200AllOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1PasswordsImport200AllOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * Generic response schema with status and message
 */
export type PostApiV1PasswordsImport200AllOf = {
  /** Response status indicating success, failure or error */
  status: PostApiV1PasswordsImport200AllOfStatus;
  message: string;
};

/**
 * Password for the account
 */
export type PostApiV1PasswordsImport200AllOfThreeDataPassword = {
  /**
   * Initialization vector for encryption
   * @minLength 1
   */
  iv: string;
  /**
   * Encrypted password string
   * @minLength 1
   */
  encrypted: string;
};

/**
 * Schema for selecting password records
 */
export type PostApiV1PasswordsImport200AllOfThreeData = {
  /**
   * Unique identifier for the password record
   * @minimum -2147483648
   * @maximum 2147483647
   */
  id: number;
  /**
   * User id
   * @minimum -2147483648
   * @maximum 2147483647
   */
  userId: number;
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  vaultId: number;
  /**
   * Name of the application or website
   * @maxLength 255
   */
  site: string;
  /**
   * Username for the account
   * @maxLength 255
   */
  username: string;
  /** Password for the account */
  password: PostApiV1PasswordsImport200AllOfThreeDataPassword;
  /**
   * URL of the service favicon
   * @maxLength 255
   * @nullable
   */
  faviconUrl: string | null;
  /**
   * Additional notes about the account
   * @maxLength 500
   * @nullable
   */
  note: string | null;
  /** Timestamp when the record was created */
  createdAt: string;
  /** Timestamp when the record was last updated */
  updatedAt: string;
};

export type PostApiV1PasswordsImport200AllOfThree = {
  /** Schema for selecting password records */
  data: PostApiV1PasswordsImport200AllOfThreeData;
};

/**
 * Schema for import password response
 */
export type PostApiV1PasswordsImport200 = PostApiV1PasswordsImport200AllOf &
  PostApiV1PasswordsImport200AllOfThree &
  Required<
    Pick<
      PostApiV1PasswordsImport200AllOf & PostApiV1PasswordsImport200AllOfThree,
      "status" | "message" | "data"
    >
  >;

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1PasswordsImport4xxAnyOfStatus =
  (typeof PostApiV1PasswordsImport4xxAnyOfStatus)[keyof typeof PostApiV1PasswordsImport4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1PasswordsImport4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PostApiV1PasswordsImport4xxAnyOfIssues = unknown | null;

export type PostApiV1PasswordsImport4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1PasswordsImport4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PostApiV1PasswordsImport4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1PasswordsImport4xxAnyOfFourStatus =
  (typeof PostApiV1PasswordsImport4xxAnyOfFourStatus)[keyof typeof PostApiV1PasswordsImport4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1PasswordsImport4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1PasswordsImport4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1PasswordsImport4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1PasswordsImport4xxAnyOfSixStatus =
  (typeof PostApiV1PasswordsImport4xxAnyOfSixStatus)[keyof typeof PostApiV1PasswordsImport4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1PasswordsImport4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1PasswordsImport4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1PasswordsImport4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PostApiV1PasswordsImport4xx =
  | PostApiV1PasswordsImport4xxAnyOf
  | PostApiV1PasswordsImport4xxAnyOfFour
  | PostApiV1PasswordsImport4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1PasswordsImport5xxAnyOfStatus =
  (typeof PostApiV1PasswordsImport5xxAnyOfStatus)[keyof typeof PostApiV1PasswordsImport5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1PasswordsImport5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PostApiV1PasswordsImport5xxAnyOfIssues = unknown | null;

export type PostApiV1PasswordsImport5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1PasswordsImport5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PostApiV1PasswordsImport5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1PasswordsImport5xxAnyOfFourStatus =
  (typeof PostApiV1PasswordsImport5xxAnyOfFourStatus)[keyof typeof PostApiV1PasswordsImport5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1PasswordsImport5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1PasswordsImport5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1PasswordsImport5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1PasswordsImport5xxAnyOfSixStatus =
  (typeof PostApiV1PasswordsImport5xxAnyOfSixStatus)[keyof typeof PostApiV1PasswordsImport5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1PasswordsImport5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1PasswordsImport5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1PasswordsImport5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PostApiV1PasswordsImport5xx =
  | PostApiV1PasswordsImport5xxAnyOf
  | PostApiV1PasswordsImport5xxAnyOfFour
  | PostApiV1PasswordsImport5xxAnyOfSix;

/**
 * Schema for updating user information
 */
export type PatchApiV1UsersBody = {
  /**
   * Username for the account
   * @minLength 2
   * @maxLength 255
   */
  userName?: string;
  /**
   * ID of the associated file
   * @minimum 1
   * @maximum 2147483647
   * @nullable
   */
  fileId?: number | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1Users200AllOfStatus =
  (typeof PatchApiV1Users200AllOfStatus)[keyof typeof PatchApiV1Users200AllOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1Users200AllOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * Generic response schema with status and message
 */
export type PatchApiV1Users200AllOf = {
  /** Response status indicating success, failure or error */
  status: PatchApiV1Users200AllOfStatus;
  message: string;
};

/**
 * Schema for master key with iv, encrypted key and salt
 */
export type PatchApiV1Users200AllOfThreeDataMasterKey = {
  /** @minLength 1 */
  iv: string;
  /** @minLength 1 */
  encrypted: string;
  /** @minLength 1 */
  salt: string;
};

/**
 * Schema for master key with iv, encrypted key and salt
 */
export type PatchApiV1Users200AllOfThreeDataRecoveryKey = {
  /** @minLength 1 */
  iv: string;
  /** @minLength 1 */
  encrypted: string;
  /** @minLength 1 */
  salt: string;
};

/**
 * User model with selected fields for responses
 */
export type PatchApiV1Users200AllOfThreeData = {
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  id: number;
  /** @maxLength 255 */
  userName: string;
  /** @maxLength 255 */
  email: string;
  /** Schema for master key with iv, encrypted key and salt */
  masterKey: PatchApiV1Users200AllOfThreeDataMasterKey;
  /** Schema for master key with iv, encrypted key and salt */
  recoveryKey: PatchApiV1Users200AllOfThreeDataRecoveryKey;
  createdAt: string;
  updatedAt: string;
};

export type PatchApiV1Users200AllOfThree = {
  /** User model with selected fields for responses */
  data: PatchApiV1Users200AllOfThreeData;
};

/**
 * Schema for user update response
 */
export type PatchApiV1Users200 = PatchApiV1Users200AllOf &
  PatchApiV1Users200AllOfThree &
  Required<
    Pick<
      PatchApiV1Users200AllOf & PatchApiV1Users200AllOfThree,
      "status" | "message" | "data"
    >
  >;

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1Users4xxAnyOfStatus =
  (typeof PatchApiV1Users4xxAnyOfStatus)[keyof typeof PatchApiV1Users4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1Users4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PatchApiV1Users4xxAnyOfIssues = unknown | null;

export type PatchApiV1Users4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1Users4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PatchApiV1Users4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1Users4xxAnyOfFourStatus =
  (typeof PatchApiV1Users4xxAnyOfFourStatus)[keyof typeof PatchApiV1Users4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1Users4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PatchApiV1Users4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1Users4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1Users4xxAnyOfSixStatus =
  (typeof PatchApiV1Users4xxAnyOfSixStatus)[keyof typeof PatchApiV1Users4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1Users4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PatchApiV1Users4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1Users4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PatchApiV1Users4xx =
  | PatchApiV1Users4xxAnyOf
  | PatchApiV1Users4xxAnyOfFour
  | PatchApiV1Users4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1Users5xxAnyOfStatus =
  (typeof PatchApiV1Users5xxAnyOfStatus)[keyof typeof PatchApiV1Users5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1Users5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PatchApiV1Users5xxAnyOfIssues = unknown | null;

export type PatchApiV1Users5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1Users5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PatchApiV1Users5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1Users5xxAnyOfFourStatus =
  (typeof PatchApiV1Users5xxAnyOfFourStatus)[keyof typeof PatchApiV1Users5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1Users5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PatchApiV1Users5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1Users5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PatchApiV1Users5xxAnyOfSixStatus =
  (typeof PatchApiV1Users5xxAnyOfSixStatus)[keyof typeof PatchApiV1Users5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiV1Users5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PatchApiV1Users5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PatchApiV1Users5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PatchApiV1Users5xx =
  | PatchApiV1Users5xxAnyOf
  | PatchApiV1Users5xxAnyOfFour
  | PatchApiV1Users5xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1Users200Status =
  (typeof GetApiV1Users200Status)[keyof typeof GetApiV1Users200Status];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1Users200Status = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * Schema for master key with iv, encrypted key and salt
 */
export type GetApiV1Users200DataAllOfMasterKey = {
  /** @minLength 1 */
  iv: string;
  /** @minLength 1 */
  encrypted: string;
  /** @minLength 1 */
  salt: string;
};

/**
 * Schema for master key with iv, encrypted key and salt
 */
export type GetApiV1Users200DataAllOfRecoveryKey = {
  /** @minLength 1 */
  iv: string;
  /** @minLength 1 */
  encrypted: string;
  /** @minLength 1 */
  salt: string;
};

/**
 * User model with selected fields for responses
 */
export type GetApiV1Users200DataAllOf = {
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  id: number;
  /** @maxLength 255 */
  userName: string;
  /** @maxLength 255 */
  email: string;
  /** Schema for master key with iv, encrypted key and salt */
  masterKey: GetApiV1Users200DataAllOfMasterKey;
  /** Schema for master key with iv, encrypted key and salt */
  recoveryKey: GetApiV1Users200DataAllOfRecoveryKey;
  createdAt: string;
  updatedAt: string;
};

/**
 * Schema for file selection
 * @nullable
 */
export type GetApiV1Users200DataAllOfFourFile = {
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  id: number;
  /** @maxLength 512 */
  url: string;
  /** @maxLength 256 */
  fileKey: string;
  createdAt: string;
  updatedAt: string;
} | null;

export type GetApiV1Users200DataAllOfFour = {
  /**
   * Schema for file selection
   * @nullable
   */
  file: GetApiV1Users200DataAllOfFourFile;
};

/**
 * User model with selected fields for responses
 */
export type GetApiV1Users200Data = GetApiV1Users200DataAllOf &
  GetApiV1Users200DataAllOfFour &
  Required<
    Pick<
      GetApiV1Users200DataAllOf & GetApiV1Users200DataAllOfFour,
      | "id"
      | "userName"
      | "email"
      | "masterKey"
      | "recoveryKey"
      | "createdAt"
      | "updatedAt"
      | "file"
    >
  >;

/**
 * Schema for getting user data response
 */
export type GetApiV1Users200 = {
  /** Response status indicating success, failure or error */
  status: GetApiV1Users200Status;
  /** User model with selected fields for responses */
  data: GetApiV1Users200Data;
};

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1Users4xxAnyOfStatus =
  (typeof GetApiV1Users4xxAnyOfStatus)[keyof typeof GetApiV1Users4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1Users4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type GetApiV1Users4xxAnyOfIssues = unknown | null;

export type GetApiV1Users4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1Users4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: GetApiV1Users4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1Users4xxAnyOfFourStatus =
  (typeof GetApiV1Users4xxAnyOfFourStatus)[keyof typeof GetApiV1Users4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1Users4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type GetApiV1Users4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1Users4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1Users4xxAnyOfSixStatus =
  (typeof GetApiV1Users4xxAnyOfSixStatus)[keyof typeof GetApiV1Users4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1Users4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type GetApiV1Users4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1Users4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type GetApiV1Users4xx =
  | GetApiV1Users4xxAnyOf
  | GetApiV1Users4xxAnyOfFour
  | GetApiV1Users4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1Users5xxAnyOfStatus =
  (typeof GetApiV1Users5xxAnyOfStatus)[keyof typeof GetApiV1Users5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1Users5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type GetApiV1Users5xxAnyOfIssues = unknown | null;

export type GetApiV1Users5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1Users5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: GetApiV1Users5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1Users5xxAnyOfFourStatus =
  (typeof GetApiV1Users5xxAnyOfFourStatus)[keyof typeof GetApiV1Users5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1Users5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type GetApiV1Users5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1Users5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1Users5xxAnyOfSixStatus =
  (typeof GetApiV1Users5xxAnyOfSixStatus)[keyof typeof GetApiV1Users5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1Users5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type GetApiV1Users5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1Users5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type GetApiV1Users5xx =
  | GetApiV1Users5xxAnyOf
  | GetApiV1Users5xxAnyOfFour
  | GetApiV1Users5xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1Vaults200Status =
  (typeof GetApiV1Vaults200Status)[keyof typeof GetApiV1Vaults200Status];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1Vaults200Status = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * Schema for selecting vault data
 */
export type GetApiV1Vaults200DataItem = {
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  id: number;
  name: string;
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  userId: number;
  createdAt: string;
  updatedAt: string;
};

/**
 * Response schema for getting all vaults
 */
export type GetApiV1Vaults200 = {
  /** Response status indicating success, failure or error */
  status: GetApiV1Vaults200Status;
  data: GetApiV1Vaults200DataItem[];
};

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1Vaults4xxAnyOfStatus =
  (typeof GetApiV1Vaults4xxAnyOfStatus)[keyof typeof GetApiV1Vaults4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1Vaults4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type GetApiV1Vaults4xxAnyOfIssues = unknown | null;

export type GetApiV1Vaults4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1Vaults4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: GetApiV1Vaults4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1Vaults4xxAnyOfFourStatus =
  (typeof GetApiV1Vaults4xxAnyOfFourStatus)[keyof typeof GetApiV1Vaults4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1Vaults4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type GetApiV1Vaults4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1Vaults4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1Vaults4xxAnyOfSixStatus =
  (typeof GetApiV1Vaults4xxAnyOfSixStatus)[keyof typeof GetApiV1Vaults4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1Vaults4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type GetApiV1Vaults4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1Vaults4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type GetApiV1Vaults4xx =
  | GetApiV1Vaults4xxAnyOf
  | GetApiV1Vaults4xxAnyOfFour
  | GetApiV1Vaults4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1Vaults5xxAnyOfStatus =
  (typeof GetApiV1Vaults5xxAnyOfStatus)[keyof typeof GetApiV1Vaults5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1Vaults5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type GetApiV1Vaults5xxAnyOfIssues = unknown | null;

export type GetApiV1Vaults5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1Vaults5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: GetApiV1Vaults5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1Vaults5xxAnyOfFourStatus =
  (typeof GetApiV1Vaults5xxAnyOfFourStatus)[keyof typeof GetApiV1Vaults5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1Vaults5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type GetApiV1Vaults5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1Vaults5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type GetApiV1Vaults5xxAnyOfSixStatus =
  (typeof GetApiV1Vaults5xxAnyOfSixStatus)[keyof typeof GetApiV1Vaults5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiV1Vaults5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type GetApiV1Vaults5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: GetApiV1Vaults5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type GetApiV1Vaults5xx =
  | GetApiV1Vaults5xxAnyOf
  | GetApiV1Vaults5xxAnyOfFour
  | GetApiV1Vaults5xxAnyOfSix;

/**
 * Request body schema for adding or updating a vault
 */
export type PostApiV1VaultsBody = {
  /** @minLength 1 */
  name: string;
};

export type PostApiV1Vaults200Status =
  (typeof PostApiV1Vaults200Status)[keyof typeof PostApiV1Vaults200Status];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1Vaults200Status = {
  success: "success",
} as const;

export type PostApiV1Vaults200Message =
  (typeof PostApiV1Vaults200Message)[keyof typeof PostApiV1Vaults200Message];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1Vaults200Message = {
  Vault_created_successfully: "Vault created successfully",
} as const;

/**
 * Schema for selecting vault data
 */
export type PostApiV1Vaults200Data = {
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  id: number;
  name: string;
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  userId: number;
  createdAt: string;
  updatedAt: string;
};

/**
 * Response schema for adding a new vault
 */
export type PostApiV1Vaults200 = {
  status: PostApiV1Vaults200Status;
  message: PostApiV1Vaults200Message;
  /** Schema for selecting vault data */
  data: PostApiV1Vaults200Data;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1Vaults4xxAnyOfStatus =
  (typeof PostApiV1Vaults4xxAnyOfStatus)[keyof typeof PostApiV1Vaults4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1Vaults4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PostApiV1Vaults4xxAnyOfIssues = unknown | null;

export type PostApiV1Vaults4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1Vaults4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PostApiV1Vaults4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1Vaults4xxAnyOfFourStatus =
  (typeof PostApiV1Vaults4xxAnyOfFourStatus)[keyof typeof PostApiV1Vaults4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1Vaults4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1Vaults4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1Vaults4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1Vaults4xxAnyOfSixStatus =
  (typeof PostApiV1Vaults4xxAnyOfSixStatus)[keyof typeof PostApiV1Vaults4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1Vaults4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1Vaults4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1Vaults4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PostApiV1Vaults4xx =
  | PostApiV1Vaults4xxAnyOf
  | PostApiV1Vaults4xxAnyOfFour
  | PostApiV1Vaults4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1Vaults5xxAnyOfStatus =
  (typeof PostApiV1Vaults5xxAnyOfStatus)[keyof typeof PostApiV1Vaults5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1Vaults5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PostApiV1Vaults5xxAnyOfIssues = unknown | null;

export type PostApiV1Vaults5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1Vaults5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PostApiV1Vaults5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1Vaults5xxAnyOfFourStatus =
  (typeof PostApiV1Vaults5xxAnyOfFourStatus)[keyof typeof PostApiV1Vaults5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1Vaults5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1Vaults5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1Vaults5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PostApiV1Vaults5xxAnyOfSixStatus =
  (typeof PostApiV1Vaults5xxAnyOfSixStatus)[keyof typeof PostApiV1Vaults5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiV1Vaults5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PostApiV1Vaults5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PostApiV1Vaults5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PostApiV1Vaults5xx =
  | PostApiV1Vaults5xxAnyOf
  | PostApiV1Vaults5xxAnyOfFour
  | PostApiV1Vaults5xxAnyOfSix;

/**
 * Request body schema for adding or updating a vault
 */
export type PutApiV1VaultsIdBody = {
  /** @minLength 1 */
  name: string;
};

export type PutApiV1VaultsId200Status =
  (typeof PutApiV1VaultsId200Status)[keyof typeof PutApiV1VaultsId200Status];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PutApiV1VaultsId200Status = {
  success: "success",
} as const;

export type PutApiV1VaultsId200Message =
  (typeof PutApiV1VaultsId200Message)[keyof typeof PutApiV1VaultsId200Message];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PutApiV1VaultsId200Message = {
  Vault_updated_successfully: "Vault updated successfully",
} as const;

/**
 * Schema for selecting vault data
 */
export type PutApiV1VaultsId200Data = {
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  id: number;
  name: string;
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  userId: number;
  createdAt: string;
  updatedAt: string;
};

/**
 * Response schema for updating an existing vault
 */
export type PutApiV1VaultsId200 = {
  status: PutApiV1VaultsId200Status;
  message: PutApiV1VaultsId200Message;
  /** Schema for selecting vault data */
  data: PutApiV1VaultsId200Data;
};

/**
 * Response status indicating success, failure or error
 */
export type PutApiV1VaultsId4xxAnyOfStatus =
  (typeof PutApiV1VaultsId4xxAnyOfStatus)[keyof typeof PutApiV1VaultsId4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PutApiV1VaultsId4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PutApiV1VaultsId4xxAnyOfIssues = unknown | null;

export type PutApiV1VaultsId4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PutApiV1VaultsId4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PutApiV1VaultsId4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PutApiV1VaultsId4xxAnyOfFourStatus =
  (typeof PutApiV1VaultsId4xxAnyOfFourStatus)[keyof typeof PutApiV1VaultsId4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PutApiV1VaultsId4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PutApiV1VaultsId4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PutApiV1VaultsId4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PutApiV1VaultsId4xxAnyOfSixStatus =
  (typeof PutApiV1VaultsId4xxAnyOfSixStatus)[keyof typeof PutApiV1VaultsId4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PutApiV1VaultsId4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PutApiV1VaultsId4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PutApiV1VaultsId4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PutApiV1VaultsId4xx =
  | PutApiV1VaultsId4xxAnyOf
  | PutApiV1VaultsId4xxAnyOfFour
  | PutApiV1VaultsId4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type PutApiV1VaultsId5xxAnyOfStatus =
  (typeof PutApiV1VaultsId5xxAnyOfStatus)[keyof typeof PutApiV1VaultsId5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PutApiV1VaultsId5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type PutApiV1VaultsId5xxAnyOfIssues = unknown | null;

export type PutApiV1VaultsId5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: PutApiV1VaultsId5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: PutApiV1VaultsId5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type PutApiV1VaultsId5xxAnyOfFourStatus =
  (typeof PutApiV1VaultsId5xxAnyOfFourStatus)[keyof typeof PutApiV1VaultsId5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PutApiV1VaultsId5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PutApiV1VaultsId5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: PutApiV1VaultsId5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type PutApiV1VaultsId5xxAnyOfSixStatus =
  (typeof PutApiV1VaultsId5xxAnyOfSixStatus)[keyof typeof PutApiV1VaultsId5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PutApiV1VaultsId5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type PutApiV1VaultsId5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: PutApiV1VaultsId5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type PutApiV1VaultsId5xx =
  | PutApiV1VaultsId5xxAnyOf
  | PutApiV1VaultsId5xxAnyOfFour
  | PutApiV1VaultsId5xxAnyOfSix;

export type DeleteApiV1VaultsId200Status =
  (typeof DeleteApiV1VaultsId200Status)[keyof typeof DeleteApiV1VaultsId200Status];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeleteApiV1VaultsId200Status = {
  success: "success",
} as const;

export type DeleteApiV1VaultsId200Message =
  (typeof DeleteApiV1VaultsId200Message)[keyof typeof DeleteApiV1VaultsId200Message];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeleteApiV1VaultsId200Message = {
  Vault_deleted_successfully: "Vault deleted successfully",
} as const;

/**
 * Schema for selecting vault data
 */
export type DeleteApiV1VaultsId200Data = {
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  id: number;
  name: string;
  /**
   * @minimum -2147483648
   * @maximum 2147483647
   */
  userId: number;
  createdAt: string;
  updatedAt: string;
};

/**
 * Response schema for deleting a vault
 */
export type DeleteApiV1VaultsId200 = {
  status: DeleteApiV1VaultsId200Status;
  message: DeleteApiV1VaultsId200Message;
  /** Schema for selecting vault data */
  data: DeleteApiV1VaultsId200Data;
};

/**
 * Response status indicating success, failure or error
 */
export type DeleteApiV1VaultsId4xxAnyOfStatus =
  (typeof DeleteApiV1VaultsId4xxAnyOfStatus)[keyof typeof DeleteApiV1VaultsId4xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeleteApiV1VaultsId4xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type DeleteApiV1VaultsId4xxAnyOfIssues = unknown | null;

export type DeleteApiV1VaultsId4xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: DeleteApiV1VaultsId4xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: DeleteApiV1VaultsId4xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type DeleteApiV1VaultsId4xxAnyOfFourStatus =
  (typeof DeleteApiV1VaultsId4xxAnyOfFourStatus)[keyof typeof DeleteApiV1VaultsId4xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeleteApiV1VaultsId4xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type DeleteApiV1VaultsId4xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: DeleteApiV1VaultsId4xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type DeleteApiV1VaultsId4xxAnyOfSixStatus =
  (typeof DeleteApiV1VaultsId4xxAnyOfSixStatus)[keyof typeof DeleteApiV1VaultsId4xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeleteApiV1VaultsId4xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type DeleteApiV1VaultsId4xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: DeleteApiV1VaultsId4xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type DeleteApiV1VaultsId4xx =
  | DeleteApiV1VaultsId4xxAnyOf
  | DeleteApiV1VaultsId4xxAnyOfFour
  | DeleteApiV1VaultsId4xxAnyOfSix;

/**
 * Response status indicating success, failure or error
 */
export type DeleteApiV1VaultsId5xxAnyOfStatus =
  (typeof DeleteApiV1VaultsId5xxAnyOfStatus)[keyof typeof DeleteApiV1VaultsId5xxAnyOfStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeleteApiV1VaultsId5xxAnyOfStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

/**
 * @nullable
 */
export type DeleteApiV1VaultsId5xxAnyOfIssues = unknown | null;

export type DeleteApiV1VaultsId5xxAnyOf = {
  /** Response status indicating success, failure or error */
  status?: DeleteApiV1VaultsId5xxAnyOfStatus;
  message?: string;
  /** @nullable */
  issues?: DeleteApiV1VaultsId5xxAnyOfIssues;
};

/**
 * Response status indicating success, failure or error
 */
export type DeleteApiV1VaultsId5xxAnyOfFourStatus =
  (typeof DeleteApiV1VaultsId5xxAnyOfFourStatus)[keyof typeof DeleteApiV1VaultsId5xxAnyOfFourStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeleteApiV1VaultsId5xxAnyOfFourStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type DeleteApiV1VaultsId5xxAnyOfFour = {
  /** Response status indicating success, failure or error */
  status?: DeleteApiV1VaultsId5xxAnyOfFourStatus;
  message?: string;
  /** @nullable */
  stack?: string | null;
};

/**
 * Response status indicating success, failure or error
 */
export type DeleteApiV1VaultsId5xxAnyOfSixStatus =
  (typeof DeleteApiV1VaultsId5xxAnyOfSixStatus)[keyof typeof DeleteApiV1VaultsId5xxAnyOfSixStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeleteApiV1VaultsId5xxAnyOfSixStatus = {
  success: "success",
  fail: "fail",
  error: "error",
} as const;

export type DeleteApiV1VaultsId5xxAnyOfSix = {
  /** Response status indicating success, failure or error */
  status?: DeleteApiV1VaultsId5xxAnyOfSixStatus;
  message?: string;
};

/**
 * Error response schema with optional issues or stack trace
 */
export type DeleteApiV1VaultsId5xx =
  | DeleteApiV1VaultsId5xxAnyOf
  | DeleteApiV1VaultsId5xxAnyOfFour
  | DeleteApiV1VaultsId5xxAnyOfSix;
